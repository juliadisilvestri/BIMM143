---
title: "Class 8: Breast Cancer Mini Project"
author: "Julia Di Silvestri (A16950824)"
format: pdf
editor: visual
---

Before we get stuck into project work, we will have a quick look at applying PCA to some example RNASeq data (end of lab 7)

```{r}
url2 <- "https://tinyurl.com/expression-CSV"
rna.data <- read.csv(url2, row.names=1)
head(rna.data)
```

> Q. How many genes are in this data set?

```{r}
nrow(rna.data)
```

## Run PCA

```{r}
## Again we have to take the transpose of our data 
pca <- prcomp(t(rna.data), scale=TRUE)
 
## Simple un polished plot of pc1 and pc2
plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab="PC2")
```

```{r}
summary(pca)
```
^PC1 (only one axis) accounts for 92.62% of variance

```{r}
pca$x
```

```{r}
#we have 5 wt and 5 ko samples
mycols <- c(rep("blue",5), rep("red", 5))
mycols
plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab="PC2", col = mycols)
```

I could examine which genes contribute most to this first PC

```{r}
head(sort(abs(pca$rotation[,1]), decreasing = T))
```

# Analysis of Breast Cancer FNA data:

First we will call in and read the data

```{r}
# Save your input data file into your Project directory
fna.data <- "https://bioboot.github.io/bimm143_S20/class-material/WisconsinCancer.csv"

# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv(fna.data, row.names=1)
head(wisc.df)
```

We do not want the first column because it essentially gives us the answer, so we will create a data set that omits the first column

```{r}
# We can use -1 here to remove the first column
wisc.data <- wisc.df[,-1]
head(wisc.data)
```

No we will create a vector containing the data from the first column "diagnosis" to use later for plotting. 

```{r}
# Create diagnosis vector for later 
diagnosis <- as.factor(wisc.df$diagnosis)
diagnosis
```

## Exploratory Data Analysis

> Q1. How many observations are in this dataset?

```{r}
nrow(wisc.data)
```

> Q2. How many of the observations have a malignant diagnosis?

```{r}
table(diagnosis)
```

> Q3. How many variables/features in the data are suffixed with _mean?

```{r}
colnames(wisc.data)
```
```{r}
length(grep("mean", colnames(wisc.data)))
```

## Performing PCA

Here we will use `prcomp()` on the `wisc.data` object -- the one without the diagnosis column

First, we have to decide whether we need to scale the data or not by using `scale = T` when we run `prcomp()`

We can look at the means / standard deviations of each column. If they are similar, we are all good to go. If not, we should used `scale = T`

```{r}
# Check column means and standard deviations
colMeans(wisc.data)

apply(wisc.data,2,sd)
```

These are very different so we should scale them.

```{r}
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp( wisc.data, scale = T )
summary(wisc.pr)
```

> Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

44.27% (read from table)

> Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

3 PCs (read from table)

> Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

7 PCs (read from table)

### Plotting the PCA results

```{r}
biplot(wisc.pr)
```

This plot is confusing and useless. We need to build our own.

```{r}
attributes(wisc.pr)
#we want x
```

```{r}
# Scatter plot observations by components 1 and 2
plot( wisc.pr$x[,1], wisc.pr$x[,2])
#can't get the col = diagnosis to work -- not sure why
```

```{r}
library(ggplot2)

pc <- as.data.frame(wisc.pr$x)

ggplot(pc) + aes(PC1, PC2, col = diagnosis) + geom_point()
```

> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

```{r}
wisc.pr$rotation["concave.points_mean",1]
```

> Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

```{r}
tbl <- summary(wisc.pr)
which(tbl$importance[3,] > 0.8)[1]
```

## Hierarchical Clustering

The main function for Hierarchical Fuctioning is called `hclust()` it takes a distance matrix as input

```{r}
d <- dist(scale(wisc.data))
wisc.hclust <- hclust(d)
plot(wisc.hclust)
```

```{r}
plot(wisc.hclust)
abline(h=18, col = "red")
```
```{r}
grps <- cutree(wisc.hclust, h = 18)
table(grps)
```


This method is not very helpful in giving clear groups. Instead we will use clustering PCA.

## Combining methods

Here we will perform clustering on our PCA results rather than our original data. 

In other words, we will cluster using `wisc.pr$x` - our new better variables or PCs. We can choose as many or as few as we like. It is our call!

```{r}
#start with the first 3 PCs
head(wisc.pr$x[, 1:3])
```

```{r}
d.pc <- dist(wisc.pr$x[, 1:3])

wisc.pr.hclust <- hclust( d.pc, method = "ward.D2")
plot(wisc.pr.hclust)
```


>Q12.Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?

We did not do this in class

>Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

Professor only told us to use "ward.D2".

We now have a much clearer separation into two groups. Let's try cutting it. 
```{r}
plot(wisc.pr.hclust)
abline(h= 80, col = "red")
```

Now we will cut at the line:

```{r}
grps <- cutree(wisc.pr.hclust, h = 80)
table(grps)
```

We can use this `table()` function to make a cross-table as well as just a count table. 

```{r}
table(diagnosis)
```

```{r}
table(grps, diagnosis)
```
>Q15. How well does the newly created model with four clusters separate out the two diagnoses?

The new model is much better at separating. 

>Q16. How well do the k-means and hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.

We did not do kmeans, so this code will not work since I did not set wisc.km$cluster

This table says that out of the 357 B professionally diagnosed results, our cluster correctly identified 333 of them. Out of the 212 M results, our cluster correctly identified 179 of them.

## Prediction

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
#using our `wisc.pr` to predict where individuals would lie
npc <- predict(wisc.pr, newdata=new)
npc
```
Plotting this information 

```{r}
plot(wisc.pr$x[,1:2], col=grps)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

>Q18. Which of these new patients should we prioritize for follow up based on your results?

This very clearly shows that patient 2 is the one to be more concerned with. 


