---
title: "Class 09: Candy Mini-Project"
author: "Julia Di Silvestri: A16950824"
format: pdf
editor: visual
---

# Importing Candy Data

First, I loaded the csv file into this R project. Now I will assign it a name and read the output.

```{r}
candy_file <- "candy-data.csv"
candy <- read.csv(candy_file, row.names = 1)
head(candy)
```

> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

There are 85 different types of candy in this dataset.

> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy["fruity"])
```

38 of the candies in the data set are fruity.

# What is Your Favorite Candy?

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

My favorite candy in the dataset is Reese's Peanut Butter Cups.

```{r}
candy["Reese's Peanut Butter cup", ]$winpercent
```

It's winpercent is 84.18%

> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat", ]$winpercent
```

Kit Kat's winpercent is 76.77%

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

Tootsie Rolls have a winpercent of 49.65%.

> Qextra. What is the least liked candy in the dataset?

```{r}
inds <- order(candy$winpercent)
head(candy[inds,])
```

The data is not ordered from least to most liked (as determined by winpercent). Nik L Nip is the least liked.


Next, we will install and load the `skimr` package to help get a quick overview of a given dataset

```{r}
library(skimr)
```

Now we will use the `skim()` function to look at the candy dataset

```{r}
skim(candy)
```


> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

"Winpercent" is not measured on the same scale as the others (not 0-1)

> Q7. What do you think a zero and one represent for the candy$chocolate column?

This column will show a 1 if the candy is a chocolate, and a 0 if the candy is a different type. 

> Q8. Plot a histogram of winpercent values

```{r}
library(ggplot2)

ggplot(candy) +
  aes(winpercent) + 
  geom_histogram(binwidth = 5)
```

> Q9. Is the distribution of winpercent values symmetrical?

 This histogram is not completely symmetrical. It is slightly more concentrated towards the lower winpercentages. 
 
> Q10. Is the center of the distribution above or below 50%?

The mean is below 50%

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
mean(candy$winpercent[as.logical(candy$chocolate)])
mean(candy$winpercent[as.logical(candy$fruity)])

```

The mean winpercent for chocolate candies is higher than that of fruity candies.

> Q12. Is this difference statistically significant?

```{r}
chocwin <- candy$winpercent[as.logical(candy$chocolate)]
fruitwin <- candy$winpercent[as.logical(candy$fruity)]

t.test(chocwin, fruitwin)
```

The p-vaule is very small, so this is a statistically significant difference. 


# Overall Candy Rankings

> Q13. What are the five least liked candy types in this set?

Let's call up the dataset ordered by winpercent that we made earlier. 

```{r}
inds <- order(candy$winpercent)
head(candy[inds,])

#extract the top 5 from this
library(dplyr)
candy %>% arrange(winpercent) %>% head(5)
```

The `dplyr` approach allows us to order the data set with less input, and extract exactly the amount of rows that we want. The 5 least liked candies are Nik L Nip, Boston Baked Beans, Chiclets, Super Bubble, and Jawbusters.


> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
candy %>% arrange(desc(winpercent)) %>% head(5)
```
 We can use the same approach as before, but put the list in descending order. The 5 most liked candies are Reese's Peanut Butter cup, Reese's Miniatures, Twix, Kit Kat, and Snickers.
 
> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col()
```

 > Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?
 
```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col() 
```

Now let's add some color to make it look a little nicer:

```{r}
#custom color vector -- start with all black
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "plum"
#candies that do not fit into above categories will remain black bc we started with it

ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col(fill = my_cols) + 
  labs(title = "Candy Preferences", x = "Win Percent", y = NULL)

ggsave('barplot1.png', width = 7, height = 10)
```
You can insert any image using this markdown syntax`![](image/url/file)` 

![A plot with better aspect ratio](barplot1.png)

> Q17. What is the worst ranked chocolate candy?

Sixlets

> Q18. What is the best ranked fruity candy?

starburst


# Taking a Look at Pricepercent

If we want to see what is a good candy to buy in terms of winpercent and pricepercent we can plot these two variables and then see the best candy for the least amount of money.

```{r}
#How about a plot of price vs win
library(ggrepel)

ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text()
```
This is a mess. Lets try the `geom_text_repel()` function to get rid of some overlap.

```{r}
#How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text_repel(col = my_cols)
```

That is better, but ot what we want. Let's play with `max.overlaps()` and `size()`

```{r}
library(ggrepel)

# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
```
> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reese's miniatures are very highly ranked for winpercent, but relatively low for pricepercent

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```
The least popular of these is Nik L Nip.


# Exploring the Correlation Structure

```{r}
library(corrplot)
```

```{r}
cij <- cor(candy)
corrplot(cij)
```
> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

The most anti-correlated variables are chocolate and fruity

> Q23. Similarly, what two variables are most positively correlated?

The most positively correlated variables (aside from eveything with itself) is chocolate and winpercent

# PCA time

The main function for this is called `prcome()`, and here we need to scale our data because winpercent is on a different scale than everything else

```{r}
pca <- prcomp(candy, scale = T)
summary(pca)
```

Now we can plot our two main PCAs very simply:

```{r}
plot(pca$x[,1:2], col=my_cols, pch=16)
```

Now, skipping a lot of steps because of time, we will create a much better PCA plot with `ggplot()`

```{r}
library(ggrepel)

# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])

p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)


p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

This plot allows us to see very clear groupings if similar candies, and they seem to line up wit our original lables of fruity, chocolate, and bar.

Lastly, we will make a barplot using the `PCA$rotation` data:

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```


> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruity, pluribus, and hard are all picked up in the positive direction. This makes sense becaue most fruity candies can be expected to be hard and pluribus. If one of these variables is true, it is likely that the others are too. It lines up well with the plot made before this one. 







